/*
   moise-exceptions Gradle file

*/

plugins {
  id 'java-library'
  id 'eclipse'
  id 'maven-publish'
}

defaultTasks 'jar'

version '0.3'
group   'it.unito.di'

sourceCompatibility = 17
targetCompatibility = 17

repositories {
    mavenCentral()

    maven { url 'https://repo.gradle.org/gradle/libs-releases' }
    maven { url "https://raw.githubusercontent.com/jacamo-lang/mvn-repo/master" }

}

configurations {
	  sshAntTask
    //umljavadoc  // see http://www.umlgraph.org/doc/indexw.html
    extraLibs
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

dependencies {
    api('org.jason:jason:3.1') {
     exclude group: 'net.sf.ingenias', module: 'jade'
    }
    api('org.jacamo:npl:0.5')  {  transitive = false  }
    api('org.jacamo:cartago:3.1') {  transitive = false  }
    api('org.jacamo:jaca:3.1') {  transitive = false  }

    testImplementation('org.junit.jupiter:junit-jupiter:5.8.2')

    api('guru.nidi:graphviz-java:0.7.0') {
     exclude group: 'xml-apis', module: 'xml-apis'
     exclude group: 'xml-apis', module: 'xml-apis-ext'
    }

    //umljavadoc 'org.umlgraph:umlgraph:5.6'

    // used in cartago web infrastructure
    implementation "io.vertx:vertx-core:3.7.0"
    implementation "io.vertx:vertx-sync:3.7.0"
    implementation "io.vertx:vertx-unit:3.7.0"
    implementation "io.vertx:vertx-web:3.7.0"
    implementation "io.vertx:vertx-web-client:3.7.0"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.9.8"

    implementation 'com.google.code.gson:gson:2.8.6'

	sshAntTask 'org.apache.ant:ant-jsch:1.7.1', 'jsch:jsch:0.1.29'

    extraLibs 'com.google.code.gson:gson:2.8.6'
}

test {
    useJUnitPlatform()
}

jar {
    baseName 'moise-exceptions'
    into('') {
        from configurations.extraLibs
    }
}

clean {
    delete 'bin'
    delete 'doc/api'
    delete 'test.xml'
}

task os2dot (type: JavaExec, dependsOn: 'jar') {
    mainClass = 'moise.tools.os2dotGUI'
    classpath sourceSets.main.runtimeClasspath
}

eclipse {
    classpath {
        downloadJavadoc = true
    }
}

task javadocJar (type: Jar, dependsOn: javadoc) {
    baseName 'moise-exceptions'
    classifier = 'javadoc'
    from '${docsDir}/../../doc/api'
}

task sourceJar (type : Jar) {
    baseName 'moise-exceptions'
    classifier = 'sources'
    from sourceSets.main.allSource
}

task fixTab {
    ant.fixcrlf(eol: 'lf',  includes: '**/*.txt,**/*.bat, **/*.adoc', srcdir: '.')
    ant.fixcrlf(tab: 'remove', tablength: '4', javafiles: 'true', includes: '**/*.java,**/*.xml,**/*.xsl,**/*.xsd', srcdir: 'src')
    ant.fixcrlf(tab: 'remove', tablength: '4', javafiles: 'true', includes: '**/*.java,**/*.xml,**/*.xsl,**/*.xsd', srcdir: 'examples')
}

task renderAsciiDocs(type: Exec) {
    commandLine 'find', '.', '-name', '*.adoc', '-exec', 'asciidoctor', '{}', ';'
}

javadoc {
    options.showAll()
    options.encoding('UTF-8')
    options.setUse(true)
    options.author(true)
    options.version(true)
    options.windowTitle('Moise API')
    options.docTitle('Moise API')
    options.footer('<a href=http://moise.sf.net>Moise Site</a>')
    destinationDir = file("${buildDir}/../doc/api")
    doFirst {
        javadoc.title = 'Moise API'
        javadoc.options.docTitle = javadoc.title
    }
}

// the following lines is used to avoid errors while generating javadoc
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
      tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
      }
    }
}


task publishToMavenSF(dependsOn: ['build', 'publishToMavenLocal']) {
	doLast {

    	def wdir = System.getProperty("user.home")+'\\.m2\\repository\\it\\unito\\di\\moise-exceptions\\'
	    def tdir = project.findProperty("sf.user")+'@web.sourceforge.net:/home/project-web/moise-exceptions/htdocs/maven2/it/unito/di/moise-exceptions/'

        file(wdir+'maven-metadata-local.xml').renameTo(file(wdir+'maven-metadata.xml'))

		ant.taskdef(name: 'scp', classname: 'org.apache.tools.ant.taskdefs.optional.ssh.Scp',
            classpath: configurations.sshAntTask.asPath)

	    // Invoke the scp Ant task. (Use gradle -i update to see the output of the Ant task.)
	    ant.scp(todir: tdir,
	            password: project.findProperty("sf.pass"),
	            trust: "yes",
	            verbose: 'true') {
                    fileset(dir: wdir) {
                        include(name: '**/**')
                    }
	    }

        file(wdir+'maven-metadata.xml').renameTo(file(wdir+'maven-metadata-local.xml'))

	}
}
